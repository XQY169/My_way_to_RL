# -*- coding: utf-8 -*-
import sys

# Form implementation generated from reading ui file 'version_0.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread, pyqtSignal, Qt
from PyQt5.QtWidgets import QApplication, QMainWindow, QHeaderView, QTableWidgetItem, QFileDialog, QGraphicsLineItem, \
    QGraphicsTextItem, QGraphicsItem
from PyQt5.QtGui import QPainter,QColor,QPen


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(969, 738)
        titles = ('x坐标','y坐标','z坐标','后仰角','右倾角','左转角','Vx','Vy','Vz','Wx','Wy','Wz','RPM1','RPM2','RPM3','RPM4','进度',
                  '奖励','结束标志位')
        self.x_tick = 40;
        self.y_tick = 60;
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_8.addWidget(self.label_2)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout_8.addWidget(self.comboBox)

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_8.addWidget(self.label_3)
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem('随意视角');
        self.comboBox_2.addItem('固定视角');
        self.comboBox_2.addItem('跟随无人机')
        self.horizontalLayout_8.addWidget(self.comboBox_2)

        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_8.addWidget(self.label_4)
        self.comboBox_3 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem('用户控制单无人机')
        self.comboBox_3.addItem('模型控制单无人机')
        self.comboBox_3.addItem('模型控制多无人机')
        self.horizontalLayout_8.addWidget(self.comboBox_3)

        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem)
        self.verticalLayout.addLayout(self.horizontalLayout_8)
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(19)
        self.tableWidget.setColumnWidth(0,100)
        self.tableWidget.horizontalHeader().setSectionResizeMode(1,QHeaderView.Stretch)
        for row,row_name in enumerate(titles):
            name_item = QTableWidgetItem(row_name);
            self.tableWidget.setItem(row,0,name_item);
        self.verticalLayout.addWidget(self.tableWidget)
        self.horizontalLayout.addLayout(self.verticalLayout)

        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setSpacing(6)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_9.addWidget(self.label_5)
        self.comboBox_4 = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_4.sizePolicy().hasHeightForWidth())
        self.comboBox_4.setSizePolicy(sizePolicy)
        self.comboBox_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.comboBox_4.setObjectName("comboBox_4")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.horizontalLayout_9.addWidget(self.comboBox_4)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_9.addWidget(self.label_6)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_9.addWidget(self.pushButton)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem1)
        self.verticalLayout_2.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_6.addWidget(self.label_7)
        self.textEdit_4 = QtWidgets.QTextEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit_4.sizePolicy().hasHeightForWidth())
        self.textEdit_4.setSizePolicy(sizePolicy)
        self.textEdit_4.setMaximumSize(QtCore.QSize(100, 20))
        self.textEdit_4.setObjectName("textEdit_4")
        self.textEdit_4.setText("0");
        self.horizontalLayout_6.addWidget(self.textEdit_4)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_6.addWidget(self.label_8)
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMaximumSize(QtCore.QSize(100, 20))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setText("0");
        self.horizontalLayout_6.addWidget(self.textEdit)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.verticalLayout_5.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_2.addLayout(self.verticalLayout_5)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)

        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setObjectName("pushButton_8")
        self.horizontalLayout_10.addWidget(self.pushButton_8)
        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setObjectName("pushButton_9")
        self.horizontalLayout_10.addWidget(self.pushButton_9)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem4)
        self.verticalLayout_2.addLayout(self.horizontalLayout_10)

        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_7.addWidget(self.label_9)
        self.comboBox_5 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.horizontalLayout_7.addWidget(self.comboBox_5)
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_7.addWidget(self.label_10)
        self.comboBox_6 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_6.setObjectName("comboBox_6")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.horizontalLayout_7.addWidget(self.comboBox_6)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem3)
        self.verticalLayout_5.addLayout(self.horizontalLayout_7)

        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_2.addLayout(self.verticalLayout_3)
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setObjectName("graphicsView")
        self.verticalLayout_3.addWidget(self.graphicsView);
        self.init_graph();
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_5.addWidget(self.pushButton_2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_4.addWidget(self.pushButton_4)
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_4.addWidget(self.pushButton_5)
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_6.sizePolicy().hasHeightForWidth())
        self.pushButton_6.setSizePolicy(sizePolicy)
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout_4.addWidget(self.pushButton_6)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_4.addWidget(self.pushButton_3)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_7.sizePolicy().hasHeightForWidth())
        self.pushButton_7.setSizePolicy(sizePolicy)
        self.pushButton_7.setObjectName("pushButton_7")
        self.horizontalLayout_3.addWidget(self.pushButton_7)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.verticalLayout_2.addLayout(self.verticalLayout_4)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 969, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def init_graph(self):
        self.scene = QtWidgets.QGraphicsScene();
        self.addAxis(self.scene);
        self.graphicsView.setScene(self.scene);

    def addAxis(self, scene):
        # 添加水平坐标轴
        x_axis = QGraphicsLineItem(200, 200, 1000, 200)
        scene.addItem(x_axis)

        # 添加垂直坐标轴
        y_axis = QGraphicsLineItem(200, -100, 200, 500)
        scene.addItem(y_axis)

        # 添加水平刻度和标签
        for i in range(1, 21):
            x = 200 + i * 40
            tick = QGraphicsLineItem(x, 200, x, 195)
            scene.addItem(tick)
            label = QGraphicsTextItem(str(i * self.x_tick))
            label.setPos(x - 5, 205)
            scene.addItem(label)

        # 添加垂直刻度和标签
        for i in range(0,21):
            y = -100 + i * 30
            tick = QGraphicsLineItem(195, y, 200, y)
            scene.addItem(tick)
            label = QGraphicsTextItem(str(-i * self.y_tick+10*self.y_tick))
            if -i * self.y_tick+10*self.y_tick < 0:
                label.setPos(165, y-10)
            else:
                label.setPos(175, y-10)
            scene.addItem(label)

        # 添加坐标轴标题
        x_title = QGraphicsTextItem("Epochs")
        x_title.setPos(600, 220)
        scene.addItem(x_title)

        y_title = QGraphicsTextItem("Total Rewards")
        y_title.setPos(150, 210)
        y_title.setRotation(-90)
        scene.addItem(y_title)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "Drone ID："))
        self.label_3.setText(_translate("MainWindow", "视角："))
        self.label_4.setText(_translate("MainWindow", "控制模式"))
        self.label.setText(_translate("MainWindow", "状态信息"))
        self.label_5.setText(_translate("MainWindow", "开始训练："))
        self.comboBox_4.setItemText(0, _translate("MainWindow", "验证模式"))
        self.comboBox_4.setItemText(1, _translate("MainWindow", "训练模式"))
        self.label_6.setText(_translate("MainWindow", "参数设置："))
        self.pushButton.setText(_translate("MainWindow", "发送到Pybullet"))
        self.label_7.setText(_translate("MainWindow", "Epoch："))
        self.label_8.setText(_translate("MainWindow", "Batch："))
        self.label_9.setText(_translate("MainWindow", "仿真界面："))
        self.comboBox_5.setItemText(0, _translate("MainWindow", "是"))
        self.comboBox_5.setItemText(1, _translate("MainWindow", "否"))
        self.label_10.setText(_translate("MainWindow", "交互界面："))
        self.comboBox_6.setItemText(0, _translate("MainWindow", "是"))
        self.comboBox_6.setItemText(1, _translate("MainWindow", "否"))
        self.pushButton.setText(_translate("MainWindow", "发送到Pybullet"))
        self.pushButton_2.setText(_translate("MainWindow", "升起"))
        self.pushButton_4.setText(_translate("MainWindow", "左倾"))
        self.pushButton_5.setText(_translate("MainWindow", "前倾"))
        self.pushButton_6.setText(_translate("MainWindow", "后倾"))
        self.pushButton_3.setText(_translate("MainWindow", "右倾"))
        self.pushButton_7.setText(_translate("MainWindow", "降落"))
        self.pushButton_8.setText(_translate("MainWindow", "加载模型"))
        self.pushButton_9.setText(_translate("MainWindow", "保存模型"))

class MessageThread(QThread):
    message_thread = pyqtSignal(dict);

    def __init__(self,bullet_to_qt):
        super().__init__();
        self.bullet_to_qt = bullet_to_qt;

    def run(self):
        while True:
            if not self.bullet_to_qt.empty():
                message = self.bullet_to_qt.get();
                self.message_thread.emit(message)
                # self.bullet_to_qt.task_done()
class Mywindow(QMainWindow, Ui_MainWindow):
    def __init__(self,qt_to_bullet,bullet_to_qt):
        super(Mywindow, self).__init__()
        self.setupUi(self);
        self.qt_to_bullet = qt_to_bullet;
        self.bullet_to_qt = bullet_to_qt;

        self.comboBox.currentIndexChanged.connect(self.onComboBoxIndexChanged);
        self.comboBox_2.currentIndexChanged.connect(self.onComboBoxIndexChanged);
        self.comboBox_3.currentIndexChanged.connect(self.onComboBoxIndexChanged);
        self.comboBox_4.currentIndexChanged.connect(self.onComboBoxIndexChanged);

        self.pushButton.clicked.connect(self.on_button_click)
        self.pushButton_8.clicked.connect(self.open_file_dialog)
        self.pushButton_9.clicked.connect(self.save_file_dialog)
        self.message_thread = MessageThread(bullet_to_qt);
        self.message_thread.message_thread.connect(self.get_message);
        self.message_thread.start()

    def get_message(self,message):
        if(message.get('type','none') == 'state'):
            self.deal_state(message);
        elif(message.get('type','none') == 'drone_info'):
            self.deal_drone_ID(message);
        elif(message.get('type','none') == 'rewards'):
            self.deal_reward(message);

    def deal_state(self,message):
        obs = message['obs'];
        reward = message['reward'];
        done = message['done'];
        # nth_drone = int(self.comboBox.currentText());

        for i,state in enumerate(obs):
            state_Item = QTableWidgetItem(str(round(state,2)));
            self.tableWidget.setItem(i,1,state_Item);
        reward_Item = QTableWidgetItem(str(round(reward,2)));
        done_Item = QTableWidgetItem(str(done));
        self.tableWidget.setItem(17, 1, reward_Item);
        self.tableWidget.setItem(18,1,done_Item);
    def deal_drone_ID(self,message):
        drone_ID = message['nums'];
        # print(drone_ID);
        for i in range(drone_ID):
            # print(i)
            self.comboBox.addItem(str(i));

    def deal_reward(self,message):
        ith = message['epoch']%(20*self.x_tick);
        if (ith==0):
            self.scene.clear();
            self.addAxis(self.scene);
        total_reward = message['total_rewards'];
        point_item = self.scene.addEllipse(int(40*ith/self.x_tick+200),int(200 - 30*total_reward/self.y_tick),3,3,QPen(Qt.blue),Qt.blue);
        point_item.setFlag(QGraphicsItem.ItemIsSelectable, True)  # 允许选中数据点

    def keyPressEvent(self,e, event=None):
        key_num = e.key()
        step_size = 0.01;
        key_actions = {
            Qt.Key_U: {'type': 'key_info', 'data': np.array([step_size,step_size, step_size, step_size])},
            Qt.Key_O: {'type': 'key_info', 'data': np.array([-step_size, -step_size, -step_size, -step_size])},
            Qt.Key_W: {'type': 'key_info', 'data': np.array([-step_size, step_size, step_size, -step_size])},
            Qt.Key_S: {'type': 'key_info', 'data': np.array([step_size, -step_size,-step_size, step_size])},
            Qt.Key_A: {'type': 'key_info', 'data': np.array([step_size, step_size, -step_size, -step_size])},
            Qt.Key_D: {'type': 'key_info', 'data': np.array([-step_size,-step_size, step_size, step_size])},
            Qt.Key_R: {'type': 'reset', 'data': 'reset'}
        }
        button_colors = {
            Qt.Key_U: self.pushButton_2,
            Qt.Key_O: self.pushButton_7,
            Qt.Key_W: self.pushButton_5,
            Qt.Key_S: self.pushButton_6,
            Qt.Key_A: self.pushButton_4,
            Qt.Key_D: self.pushButton_3
        }

        # 使用字典的 get 方法，如果键不存在，则返回默认值 None
        key_action = key_actions.get(key_num)
        button = button_colors.get(key_num)

        if key_action is not None:
            self.qt_to_bullet.put(key_action)
            if button is not None:
                button.setStyleSheet('background-color:lightblue;');
        else:
            pass;

    def keyReleaseEvent(self, e, event=None):
        key_num = e.key()
        # reset_info = {'type': 'key_info', 'data': np.array([0,0,0,0])};
        # print(reset_info)
        button_colors = {
            Qt.Key_U: self.pushButton_2,
            Qt.Key_O: self.pushButton_7,
            Qt.Key_W: self.pushButton_5,
            Qt.Key_S: self.pushButton_6,
            Qt.Key_A: self.pushButton_4,
            Qt.Key_D: self.pushButton_3
        }

        # 使用字典的 get 方法，如果键不存在，则返回默认值 None
        button = button_colors.get(key_num)
        if button is not None:
            # self.qt_to_bullet.put(reset_info)
            button.setStyleSheet('background-color:lightgray; ');

        else:
            pass;

    def on_button_click(self):
        # 在按钮点击时，获取输入框的文本并打印
        text1 = self.textEdit.toPlainText()
        text2 = self.textEdit_4.toPlainText()
        batch = int(text1);
        epoch = int(text2);

        self.qt_to_bullet.put({'type':'button_info','data':np.array([epoch,batch])})

    def onComboBoxIndexChanged(self,index):
        sender = self.sender();
        if sender == self.comboBox:
            message = {'type':'comboBox_id','data':index};
            self.qt_to_bullet.put(message);
        elif sender == self.comboBox_2:
            message = {'type':'comboBox_vision','data':index};
            self.qt_to_bullet.put(message);
        elif sender == self.comboBox_3:
            message = {'type':'comboBox_mode','data':index};
            self.qt_to_bullet.put(message);
        elif sender == self.comboBox_4:
            gui = self.comboBox_5.currentIndex();
            user_debug = self.comboBox_6.currentIndex();
            message = {'type':'comboBox_train','data':[index,gui,user_debug]};
            self.qt_to_bullet.put(message);

    def open_file_dialog(self):
        file_path, _ = QFileDialog.getOpenFileName(self, 'Open File', '', 'All Files (*);;Text Files (*.txt)')
        if file_path:
            message = {'type':'open_model','data':file_path};
            self.qt_to_bullet.put(message);

    def save_file_dialog(self):
        file_path, _ = QFileDialog.getSaveFileName(self, 'Save File', '', 'All Files (*);;Text Files (*.txt)')
        if file_path:
            message = {'type':'save_model','data':file_path};
            self.qt_to_bullet.put(message);
if __name__ == "__main__":
    app = QApplication([])
    main_window = Mywindow([],[])
    main_window.show()
    sys.exit(app.exec_())